[]import pygame
import random

# Initialize Pygame
pygame.init()

# Set up the screen
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("2D Game")

# Set up the clock
clock = pygame.time.Clock()

# Load images
player_img = pygame.image.load("player.png")
obstacle_img = pygame.image.load("obstacle.png")
item_img = pygame.image.load("item.png")

# Define game variables
player_x = screen_width // 2
player_y = screen_height - 50
player_speed = 5

obstacles = []
obstacle_speed = 3
obstacle_frequency = 30
obstacle_counter = 0

items = []
item_speed = 3
item_frequency = 50
item_counter = 0
score = 0

# Define functions
def create_obstacle():
    x = random.randint(0, screen_width - obstacle_img.get_width())
    y = -obstacle_img.get_height()
    obstacles.append([x, y])

def create_item():
    x = random.randint(0, screen_width - item_img.get_width())
    y = -item_img.get_height()
    items.append([x, y])

def draw_text(text, size, color, x, y):
    font = pygame.font.Font(None, size)
    text_surface = font.render(text, True, color)
    text_rect = text_surface.get_rect()
    text_rect.center = (x, y)
    screen.blit(text_surface, text_rect)

# Game loop
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Move the player
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
    if keys[pygame.K_RIGHT] and player_x < screen_width - player_img.get_width():
        player_x += player_speed

    # Create obstacles and items
    obstacle_counter += 1
    if obstacle_counter == obstacle_frequency:
        create_obstacle()
        obstacle_counter = 0

    item_counter += 1
    if item_counter == item_frequency:
        create_item()
        item_counter = 0

    # Move obstacles and items
    for obstacle in obstacles:
        obstacle[1] += obstacle_speed

        if obstacle[1] > screen_height:
            obstacles.remove(obstacle)

    for item in items:
        item[1] += item_speed

        if item[1] > screen_height:
            items.remove(item)

    # Check for collisions
    player_rect = pygame.Rect(player_x, player_y, player_img.get_width(), player_img.get_height())

    for obstacle in obstacles:
        obstacle_rect = pygame.Rect(obstacle[0], obstacle[1], obstacle_img.get_width(), obstacle_img.get_height())

        if player_rect.colliderect(obstacle_rect):
            running = False

    for item in items:
        item_rect = pygame.Rect(item[0], item[1], item_img.get_width(), item_img.get_height())

        if player_rect.colliderect(item_rect):
            items.remove(item)
            score += 1

    # Draw everything on the screen
    screen.fill((255, 255, 255))

    for obstacle in obstacles:
        screen.blit(obstacle_img, (obstacle[0], obstacle[1
